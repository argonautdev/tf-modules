name: "Module testing using terratest"
on:
  workflow_dispatch:
    inputs:
      cloud_provider:
        description: 'Select Which Cloud Provider Modules to test out'
        type: choice
        default: aws
        options:
        - aws
        - gcp
      
      tf_module:
        description: 'Select Terraform Module to test using Terratest'
        required: true
        default: 'warning' 
        type: choice
        options:
        - vpc
        - rds
        - gke
        - gcs
jobs:
  _run_terratest_aws:      
    name: Terratest for aws modules
    runs-on: ubuntu-22.04
    if:  ${{ inputs.cloud_provider }} == 'aws'
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_DEFAULT_REGION: ${{ secrets.AWS_REGION }}
    steps:
      - name: Installing GO
        uses: actions/setup-go@v3
        with:
          go-version: '^1.18.6' # The Go version .
            
      - name: Check out repository
        uses: actions/checkout@v3
      
      - name: Installing awscli
        ##It can be Java script files or public docker images. I am using awscli public docker images 
        uses: docker://amazon/aws-cli:2.7.24
        with:
          args: --version
      
      - name: aws, go cli version
        run: |
          go version
          aws --version
      
      - name: account info
        run: |
          aws sts get-caller-identity
      
      - name: module testing
        run: |
          echo "running go commands"
          cd modules/${{ inputs.cloud_provider }}/${{ inputs.tf_module }}/test
          echo "module init"
          go mod init "${{ inputs.tf_module }}"
          echo "Add Missing and Remove unused modules"
          go mod tidy
          echo "Testing the module"
          go test terraform_${{ inputs.cloud_provider }}_${{ inputs.tf_module }}_test.go -v -timeout 30m